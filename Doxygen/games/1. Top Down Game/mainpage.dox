/**
\mainpage notitle

\anchor sec1
# 1. Introduction

This is a simple top-down game with graphics, particle effects, and sound.
The player character is a person in a brown cap with a rifle
shown at bottom left in \ref fig1 "Fig. 1".
There is a non-player character in a green cap standing guard in a bunker
at the top right of \ref fig1 "Fig. 1". The guard will shoot at you if you are
too close or if you draw attention to yourself by firing your gun.
You control your character with either the the keyboard and mouse,
or with an XBox
controller (see \ref sec2 "Section 2"). 
The controller takes precedence over the keyboard and mouse when it is plugged in.

The background is a simple image and the
world size is its width and height, which are larger than the window. The
camera follows the player but it stops
at the edges of the world so that you never see anything that
is outside the world. Bullets persist until they run into something,
either the player, the guard, or the edges of the world,
at which time a particle engine is used to mark the point of
impact (a blood spatter or a small cloud of dust).
The guard rotates but does not move from the bunker. 

\anchor fig1
\image html screenshot.png "Fig. 1: A screenshot of the Top-Down Game." width=50%

The remainder of this page is divided into four sections.
\ref sec2 "Section 2" lists the controls
and their corresponding actions,
\ref sec3 "Section 3" tells you how to build it,
\ref sec4 "Section 4" gives a breakdown of the code,
and
\ref sec5 "Section 5" addresses the question "what next?".

\anchor sec2
# 2. Controls

<center>
  <table>
    <tr>
      <td><center><b>Keyboard</b></center></td>
      <td><center><b>Controller</b></center></td>
      <td><center><b>Mouse</b></center></td>
      <td><center><b>Action</b></center></td>
    <tr>
      <td><center>F1</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Help (this document)</td>
    <tr>
      <td><center>F2</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Toggle frame rate display</td>
    <tr>
      <td><center>F3</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Toggle show bounds</td>
    <tr>
      <td><center>F4</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Toggle show NPC state</td>
    <tr>
      <td><center>-</center></td>
      <td>Right thumb</td>
      <td>Move left*</td>
      <td>Rotate counterclockwise</td>
    <tr>
      <td><center>-</center></td>
      <td>Right thumb</td>
      <td>Move right*</td>
      <td>Rotate clockwise</td> 
    <tr>
      <td><center>Space</center></td>
      <td>Right button</td>
      <td>Left button</td>
      <td>Shoot</td>
    <tr>
      <td><center>A</center></td>
      <td>Digital pad left</td>
      <td><center>-</center></td>
      <td>Strafe left</td>
    <tr>
      <td><center>D</center></td>
      <td>Digital pad right</td>
      <td><center>-</center></td>
      <td>Strafe right</td>
    <tr>
      <td><center>G</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Toggle God mode</td>
    <tr>
      <td><center>S</center></td>
      <td>Digital pad down</td>
      <td><center>-</center></td>
      <td>Retreat</td>
    <tr>
      <td><center>W</center></td>
      <td>Right trigger</td>
      <td><center>-</center></td>
      <td>Move forwards</td>
    <tr>
      <td><center>Backspace</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Restart game</td>
    <tr>
      <td><center>PrtScr</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Save screenshot to a PNG file</td>
    <tr>
      <td><center>Esc</center></td>
      <td><center>-</center></td>
      <td><center>-</center></td>
      <td>Exit</td>
  </table>
</center>

 `*` Note that the mouse cursor must be inside the game window for player
rotation to occur.

\anchor sec3
# 3. How to Build

This code uses <a href="../sage/index.html">SAGE</a>.
Make sure that you have followed the
<a href="../install/index.html">SAGE Installation Instructions</a>.
Navigate to the folder `1. Top Down Game` in your
copy of the `sage-games` repository.
Run `checkenv.bat` to verify that you have set the environment
variables correctly.
Open `Top Down Game.sln` with Visual Studio and build the Release configuration.
The Release executable file `Top Down Game.exe`
will appear. 
Alternatively, run `Build.bat` to build both Release and Debug configurations. 


\anchor sec4
# 4. Code Breakdown

Open `Top Down Game.sln` in Visual Studio and examine the
code in the editor while you read the
rest of this section.
This section assumes that you have read and understood
the documentation from 
<a href="../sage/index.html">SAGE</a>
and <a href="../blank">The Blank Game</a>.

\anchor sec4-2
## 4.1 Particle Engines

`CCommon` contains a pointer `m_pParticleEngine` to a
<a href="../sage/index.html#sec3-8">2D particle engine</a>
to be used for static particle effects, that is, particle
effects that do not move with a particular object.
`CArmedObject` contains a pointer `m_pLocalParticleEngine` to a
<a href="../sage/index.html#sec3-8">2D particle engine</a>
for static particle effects, that is, particle
effects that do not move with a particular object.

\anchor sec4-2
## 4.2 Game Objects

\anchor sec4-2-1
### 4.2.1 Base Game Object

The base game object `CObject` is declared in `Object.h` and defined in `Object.cpp`.
It is derived from <a href="../sage/class_sage_1_1_c_object.html">`Sage::CObject`</a>.

\anchor sec4-2-2
### 4.2.2 Armed Object

The armed object `CArmedObject` is declared in `ArmedObject.h` and defined in `ArmedObject.cpp`.
It is derived from `CObject`.

\anchor fig2
\image html offsets.png "Fig. 2: The player sprite and offsets." width=35%

\anchor sec4-2-3
### 4.2.3 Player Object

The player object `CPlayer` is declared in `Player.h` and defined in `Player.cpp`.
It is derived from `CArmedObject`.

\anchor sec4-2-4
### 4.2.4 Guard Object

The guard object `CGuard` is declared in `Guard.h` and defined in `Guard.cpp`.
It is derived from `CArmedObject`.

\anchor fig3
\image html reload.gif "Fig. 3: The guard shotgun reload animation."

\anchor sec4-2-5
### 4.2.5 Bullet Object

The bullet object `CBullet` is declared in `Bullet.h` and defined in `Bullet.cpp`.
It is derived from `CObject`.

\anchor sec5
# 5. What Next?

Next, take a look at the <a href="../topdowntiled">Top Down Tiled Game</a>.

**/


