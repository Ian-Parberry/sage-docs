/**
\mainpage notitle

\anchor section1
# 1. Introduction

This is the Pool End Game, a simple minigame that uses
hand-written physics code based on Euler integration.

\anchor fig1
\image html ss0.png "Fig. 1: The Pool End Game at the start of a game." width=50%

\anchor section2
# 2. Keyboard Controls

<center>
<table>
<tr>
<td><center><b>Key</b></center></td>
<td><center><b>Action</b></center></td>
<tr>
<td><center>Esc</center></td>
<td>Exit</td>
<tr>
<td><center>F1</center></td>
<td>Help (this document)</td>
<tr>
<td><center>F2</center></td>
<td>Toggle frame rate</td>
<tr>
<td><center>F3</center></td>
<td>Toggle step mode</td>
<tr>
<td><center>F4</center></td>
<td>Toggle collision mode</td>
<tr>
<td><center>Up arrow</center></td>
<td>Move cue ball upwards on the base line</td>
<tr>
<td><center>Down arrow</center></td>
<td>Move cue ball downwards on the base line</td>
<tr>
<td><center>Left arrow</center></td>
<td>Rotate impulse vector counterclockwise</td>
<tr>
<td><center>Right arrow</center></td>
<td>Rotate impulse vector clockwise</td>
<tr>
<td><center>Page up</center></td>
<td>Rotate impulse vector counterclockwise fast</td>
<tr>
<td><center>Page down</center></td>
<td>Rotate impulse vector clockwise fast </td>
<tr>
<td><center>Space</center></td>
<td>Fire cue ball/start new game/take step in Step Mode</td>
<tr>
<td><center>PrtScr (hold down)</center></td>
<td>Save screenshot to a PNG file</td>
</table>
</center>

\anchor sec3
# 3. Building the Game

This code uses <a href="../sage/index.html">SAGE</a>.
Make sure that you have followed the
<a href="../install/index.html">SAGE Installation Instructions</a>.
Navigate to the folder <span style="background-color:#D8E4D8;">`1. Pool End Game`</span> in your
copy of the <span style="background-color:#D8E4D8;">`Pool End Game`</span> repository.
Run <span style="background-color:#D8E4D8;">`checkenv.bat`</span>
to verify that you have set the environment
variables correctly.
Open <span style="background-color:#D8E4D8;">`Pool End Game.sln`</span>
 with Visual Studio and build the Release configuration.
The Release executable file <span style="background-color:#D8E4D8;">`Pool End Game.exe`</span>
will appear. 
Alternatively, run <span style="background-color:#D8E4D8;">`Build.bat`</span>
to build both Release and Debug configurations. 

\anchor sec4
# 4. Game Play

\anchor fig2
\image html ss1.png "Fig. 2: The Pool End Game at the start of a game with the cue ball moved upwards." width=50%

\anchor fig3
\image html ss2.png "Fig. 3: The Pool End Game at the start of a game with the impulse vector rotated countercloskwise." width=50%

\anchor fig4
\image html winlose.png "Fig. 4: The Pool End Game after winning (left) and losing (right)." width=90%

The aim of the game is to sink the 8-ball while not sinking the cue-ball. 
In addition to being a minigame that you can actually play, the Pool
End Game allows the player to toggle in and out of Step Mode in which the ball
advances by 1/30th of a second each time the space bar is pressed and leaves
a trail of markers as shown below. Step Mode is intended to help the player
visualize the discrete nature of video game time.

@image html screenshot.png "Step Mode after the space bar has been depressed about 16 times." width=50%

The player can also
toggle in and out of Collision Mode, which displays yellow circles at the
positions of the balls at time of impact with each other and with the rails.

@image html screenshot0.png "Collision Mode." width=50%

Step Mode and Collision Mode
are mutually exclusive, which means that if the player toggles one
mode on, then the other mode is switched off. 

\anchor section5
# 5. Code Breakdown


\anchor sec6
# 6. What Next?

Next, take a look at the <a href="../shapes">Shapes Library</a>.

**/

