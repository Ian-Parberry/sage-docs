/**

\mainpage notitle

\anchor section1
# 1. Introduction

This toy uses Box2D to implement a 5-bit gravity-driven ripple-carry counter that 
counts from zero to \f$2^5 - 1 = 31\f$. 

\anchor fig1
\image html screenshot.png "Fig. 1: Screen shot." width=60%

There is an LED readout for the number of balls released and
an array of nixie tubes showing that number in binary.
It takes a few seconds for the carry to ripple down after the release of a new ball,
after which the current binary number represented by the soccer balls
is read aloud and the corresponding soccer balls (or lack of them)
highlighted by a spinning reticle.

The remainder of this page is divided into five sections.
\ref section2 "Section 2" lists the controls
and their corresponding actions,
\ref section3 "Section 3" tells you how to build it,
\ref section4 "Section 4" gives you a list of actions to take in the game to see some of its
important features,
\ref section5 "Section 5" gives a breakdown of the code,
and
\ref section6 "Section 6" addresses the question "what next?".

\anchor section2
# 2. Keyboard Controls

<center>
<table>
<tr>
<td><center><b>Key</b></center></td>
<td><center><b>Action</b></center></td>
<tr>
<td><center>F1</center></td>
<td>Help (this document)</td>
<tr>
<td><center>F2</center></td>
<td>Toggle draw mode from "sprites only", to "sprites and lines", to "lines only"</td>
<tr>
<td><center>Backspace</center></td>
<td>Reset</td>
<tr>
<td><center>Space</center></td>
<td>Increment the counter</td>
<tr>
<td><center>PrtScr (hold down)</center></td>
<td>Save screenshot to a PNG file</td>
<tr>
<td><center>Esc</center></td>
<td>Quit game and close the window</td>
</table>
</center>

\anchor section3
# 3. Building the Game

This code uses <a href="../sage/index.html">SAGE</a>
and <a href="https://github.com/erincatto/Box2D">Box2D</a>.
Make sure that you have followed the
<a href="../install/index.html">SAGE Installation Instructions</a>
and the <a href="../installphysics/index.html">Box2D Installation Instructions</a>.
Navigate to the folder <span style="background-color:#D8E4D8;">`13. Binary Counter Toy`</span> in your
copy of the <span style="background-color:#D8E4D8;">`sage-physics`</span> repository.
Run <span style="background-color:#D8E4D8;">`checkenv.bat`</span>
to verify that you have set the environment
variables correctly.
Open <span style="background-color:#D8E4D8;">`Binary Counter Toy.sln`</span>
 with Visual Studio and build the Release configuration.
Alternatively, run <span style="background-color:#D8E4D8;">`Build.bat`</span>
to build both Release and Debug configurations.

\anchor section4
# 4. Game Play

UNDER CONSTRUCTION

\anchor fig2
\image html zero-one.png "Fig. 2: Single bit counter showing a 0 (left) and a 1 (right)." width=40%

The key to this toy is the single-bit counter shown in \ref fig2 "Fig. 2". 
Bits that are 1 are represented by soccer balls. Bits that are
zero are represented by the lack of a soccer ball. For example,
the image on the
left of \ref fig2 "Fig. 2" represents a 0, and the image on the right
of \ref fig2 "Fig. 2" represents a 1.

\anchor fig3
\image html frames.png "Fig. 3: " width=60%

\anchor section5
# 5. Code Breakdown

\anchor fig4
\image html bitadd.png "Fig. 4: " width=12%

\anchor fig5
\image html add.png "Fig. 5: " width=35%

\anchor section6
# 6. What Next?

Next, take a look at the <a href="../lullaby/index.html">Cannon Lullaby Toy</a>.

**/

